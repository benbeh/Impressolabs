@using Microsoft.AspNetCore.Http.Extensions
@model ConnectPersonCompanyViewModel

<environment include="Staging, Production">
    <link type="text/css" rel="stylesheet" href="~/css/bundles/connect-person.min.css" />
</environment>

<environment include="Development">
    <link type="text/css" rel="stylesheet" href="~/css/ConnectPersonModal.css" />
</environment>

<div class="modal fade" id="ConnectPersonModal" role="dialog">
    <div class="modal-dialog">

        <form asp-action="ConnectPerson" asp-controller="Relationship" method="post">
            @Html.AntiForgeryToken()
            <!-- Modal content-->
            <div class="modal-content">

                <div class="modal-body">

                    @if (Model == null)
                    {
                        <h3 class="text-center">You cannot connect people as you are not in a company</h3>
                        <div class="connect-cancel-buttons text-center">
                            <button class="cancel-button" data-dismiss="modal">Cancel</button>
                        </div>
                    }
                    else
                    {
                        <input type="hidden" name="userId" id="ChosenConnectUserId" />
                        <input type="hidden" name="returnUrl" value="@Context.Request.GetDisplayUrl()" />

                        <div class="company">
                            @{
                                var userPhoto = "../images/Profile.jpg";
                                if (!string.IsNullOrEmpty(Model.Photo))
                                {
                                    userPhoto = Model.Photo;
                                }
                            }
                            <img class="rounded-circle" alt="company image" src="@userPhoto"/>
                            <div class="company-information">
                                <div class="company-name">@Model.Name</div>
                                @if (Model.Industry != IndustryEnum.None)
                                {
                                    <div class="company-industry">@Model.Industry.GetDescription()</div>
                                }
                                <div class="company-location">@Model.Location</div>
                            </div>
                        </div>

                        <p class="invitation-text">
                            Hi! <span class="user-name"></span>,<br />
                            We saw your profile. We would like to:
                        </p>

                        <div class="connect-purposes">
                            <p class="connect-purpose active">Invite you to this job offer</p>
                            <div class="connect-purpose">
                                <p class="title">Discuss a job offer</p>
                                <span class="extra-text">(Meet up for coffe, lunch or dinner)</span>
                            </div>
                        </div>

                        <div class="job-dropdown">
                            <img alt="arrow down" src="~/images/Black/arrowDown.svg" />
                            <select name="jobId"></select>
                        </div>

                        <div class="connect-cancel-buttons text-center">
                            <button class="connect-button" type="submit">Connect</button>
                            <button class="cancel-button" data-dismiss="modal">Cancel</button>
                        </div>
                    }

                </div>

            </div>
        </form>

    </div>
</div>

<environment include="Staging, Production">
    <script src="~/js/bundles/connect-person.min.js" type="text/javascript"></script>
</environment>

<environment include="Development">
    <script type="text/javascript" src="~/js/ConnectPersonModal.js"></script>
</environment>